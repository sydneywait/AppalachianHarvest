@model AppalachianHarvest.Models.ViewModels.CreateEditProductViewModel
@using System.IO;


@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Product.ProductId" />
            <div class="form-group">
                <label asp-for="Product.Name" class="control-label"></label>
                <input asp-for="Product.Name" class="form-control" />
                <span asp-validation-for="Product.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.ProducerId" class="control-label"></label>
                <select asp-for="Product.ProducerId" class="form-control" asp-items="Model.Producers"></select>
                <span asp-validation-for="Product.ProducerId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.ProductTypeId" class="control-label"></label>
                <select asp-for="Product.ProductTypeId" class="form-control" asp-items="Model.ProductTypes"></select>
                <span asp-validation-for="Product.ProductTypeId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.ShelfId" class="control-label"></label>
                <select asp-for="Product.ShelfId" class="form-control" asp-items="Model.Shelves"></select>
                <span asp-validation-for="Product.ShelfId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.Quantity" class="control-label"></label>
                <input asp-for="Product.Quantity" class="form-control" />
                <span asp-validation-for="Product.Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.Price" class="control-label"></label>
                <input asp-for="Product.Price" class="form-control" />
                <span asp-validation-for="Product.Price" class="text-danger"></span>
            </div>
            <div>

                @if (Model.Product.Image != null)
                {
                    {

                        var base64 = Convert.ToBase64String(Model.Product.Image);
                        var imgSrc = String.Format("data:image/gif;base64,{0}", base64);


                        <img class="productImgThumb" style="width:40px" src="@imgSrc" />
                    }

                }
               

            </div>

            <div class="form-group">
                <label asp-for="Product.ImageUpload" class="control-label"></label>
                <input asp-for="Product.ImageUpload" class="form-control" id="ImageUpload" />
                <span asp-validation-for="Product.Image" class="text-danger"></span>
            </div>

                     <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Product.IsOrganic" /> @Html.DisplayNameFor(model => model.Product.IsOrganic)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Product.IsActive" /> @Html.DisplayNameFor(model => model.Product.IsActive)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
